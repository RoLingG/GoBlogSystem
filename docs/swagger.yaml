basePath: /
definitions:
  advert_api.AdvertRequest:
    properties:
      href:
        type: string
      images:
        type: string
      is_show:
        type: boolean
      title:
        type: string
    required:
    - href
    - images
    - title
    type: object
  article_api.ArticleRequest:
    properties:
      abstract:
        description: 文章简介，不填就要根据正文内容摘选
        type: string
      category:
        description: 文章分类
        type: string
      content:
        description: 文章正文
        type: string
      image_id:
        description: 文章封面ID
        type: integer
      link:
        description: 原文链接
        type: string
      source:
        description: 资源来源
        type: string
      tags:
        description: 文章标签
        items:
          type: string
        type: array
      title:
        description: 文章标题
        type: string
    required:
    - content
    - title
    type: object
  article_api.ArticleUpdateRequest:
    properties:
      abstract:
        description: 文章简介
        type: string
      category:
        description: 文章分类
        type: string
      content:
        description: 文章内容
        type: string
      id:
        type: string
      image_id:
        description: 文章封面id
        type: integer
      link:
        description: 原文链接
        type: string
      source:
        description: 文章来源
        type: string
      tags:
        description: "文章标签\ttags在model里是ctype.Array类型，ctype.Array类型本质就是一个[]string，所以这里能用[]string接收"
        items:
          type: string
        type: array
      title:
        description: 文章标题
        type: string
    type: object
  article_api.CalendarResponse:
    properties:
      count:
        type: integer
      date:
        type: string
    type: object
  article_api.CollectResponse:
    properties:
      abstract:
        description: 文章简介
        type: string
      category:
        description: 文章分类
        type: string
      collect_count:
        description: 文章收藏数
        type: integer
      comment_count:
        description: 文章评论数
        type: integer
      content:
        description: 文章正文
        type: string
      create_at:
        type: string
      digg_count:
        description: 文章点赞数
        type: integer
      id:
        description: es的ID
        type: string
      image_id:
        description: 文章封面ID
        type: integer
      image_url:
        description: 文章封面url
        type: string
      keyword:
        description: 关键字，用于检测文章是否存在，值一般与title一致
        type: string
      link:
        description: 原文链接
        type: string
      look_count:
        description: 文章观看数
        type: integer
      source:
        description: 资源来源
        type: string
      tags:
        description: 文章标签，这里的tags分成两个也是和上面用户名同理
        items:
          type: string
        type: array
      title:
        description: 文章标题
        type: string
      update_at:
        description: 更新时间
        type: string
      user_avatar:
        description: 文章用户头像
        type: string
      user_id:
        description: 文章作者ID
        type: integer
      user_nick_name:
        description: 文章用户昵称
        type: string
    type: object
  article_api.IDListRequest:
    properties:
      id_list:
        items:
          type: string
        type: array
    type: object
  article_api.TagsResponse:
    properties:
      article_id_list:
        items:
          type: string
        type: array
      count:
        type: integer
      create_at:
        type: string
      tag:
        type: string
    type: object
  comment_api.CommentListRequest:
    properties:
      article_id:
        type: string
    type: object
  comment_api.CommentRequest:
    properties:
      article_id:
        type: string
      content:
        type: string
      parent_comment_id:
        description: 父评论id
        type: integer
    required:
    - article_id
    - content
    type: object
  ctype.ImageType:
    enum:
    - 1
    - 2
    type: integer
    x-enum-comments:
      Local: 本地
      QiNiu: 七牛云
    x-enum-varnames:
    - Local
    - QiNiu
  ctype.Role:
    enum:
    - 1
    - 2
    - 3
    - 4
    type: integer
    x-enum-comments:
      PermissionAdmin: 管理员
      PermissionDisableUser: 被ban用户
      PermissionUser: 普通用户
      PermissionVisitor: 游客
    x-enum-varnames:
    - PermissionAdmin
    - PermissionUser
    - PermissionVisitor
    - PermissionDisableUser
  ctype.SignStatus:
    enum:
    - 1
    - 2
    - 3
    type: integer
    x-enum-comments:
      SignEmail: Email登录
      SignGitee: Gitee登录
      SignQQ: QQ登录
    x-enum-varnames:
    - SignQQ
    - SignGitee
    - SignEmail
  images_api.ImageResponse:
    properties:
      id:
        type: integer
      name:
        type: string
      path:
        type: string
    type: object
  images_api.ImageUpdateRequest:
    properties:
      id:
        type: integer
      name:
        type: string
    required:
    - id
    - name
    type: object
  menu_api.Image:
    properties:
      id:
        type: integer
      path:
        type: string
    type: object
  menu_api.ImageSort:
    properties:
      image_id:
        type: integer
      sort:
        type: integer
    type: object
  menu_api.MenuNameResponse:
    properties:
      id:
        type: integer
      menu_path:
        type: string
      menu_title:
        type: string
    type: object
  menu_api.MenuRequest:
    properties:
      abstract:
        items:
          type: string
        type: array
      abstract_time:
        description: 简介的切换时间，单位为秒
        type: integer
      image_sort_list:
        description: 具体图片的顺序，要单独给ImageSortList创建一个类型是因为如果用[]imageModel要传的参数太多了，实际上我们只需要对应的ID和序号就行
        items:
          $ref: '#/definitions/menu_api.ImageSort'
        type: array
      menu_path:
        type: string
      menu_time:
        description: 图片的切换时间，单位为秒
        type: integer
      menu_title:
        type: string
      slogan:
        type: string
      sort:
        description: 菜单的序号
        type: integer
    required:
    - menu_path
    - menu_title
    - sort
    type: object
  menu_api.MenuResponse:
    properties:
      abstract:
        description: 简介
        items:
          type: string
        type: array
      abstract_time:
        description: 简介的切换时间
        type: integer
      create_at:
        type: string
      id:
        type: integer
      menu_image:
        description: 之所以这里有一个MenuImage是为了顶替MenuModel里面的连表MenuImage
        items:
          $ref: '#/definitions/menu_api.Image'
        type: array
      menu_path:
        description: 路径
        type: string
      menu_time:
        description: 菜单图片的切换时间，为0不切换
        type: integer
      menu_title:
        description: 标题
        type: string
      slogan:
        description: 标语
        type: string
      sort:
        description: 菜单的顺序
        type: integer
    type: object
  message_api.Message:
    properties:
      content:
        description: 消息内容
        type: string
      create_at:
        description: 最新的消息时间
        type: string
      message_count:
        description: 消息条数
        type: integer
      rev_user_avatar:
        type: string
      rev_user_id:
        description: 接收人id
        type: integer
      rev_user_nick_name:
        type: string
      send_user_avatar:
        type: string
      send_user_id:
        description: 发送人id
        type: integer
      send_user_nick_name:
        type: string
    type: object
  message_api.MessageRecordRequest:
    properties:
      user_id:
        type: integer
    required:
    - user_id
    type: object
  message_api.MessageRequest:
    properties:
      content:
        description: 消息内容
        type: string
      rev_user_id:
        description: 接收人id
        type: integer
      send_user_id:
        description: 发送人id
        type: integer
    required:
    - content
    - rev_user_id
    - send_user_id
    type: object
  models.AdvertModel:
    properties:
      create_at:
        type: string
      href:
        type: string
      id:
        type: integer
      images:
        type: string
      is_show:
        type: boolean
      title:
        type: string
    type: object
  models.ArticleModel:
    properties:
      abstract:
        description: 文章简介
        type: string
      category:
        description: 文章分类
        type: string
      collect_count:
        description: 文章收藏数
        type: integer
      comment_count:
        description: 文章评论数
        type: integer
      content:
        description: 文章正文
        type: string
      create_at:
        description: 创建时间
        type: string
      digg_count:
        description: 文章点赞数
        type: integer
      id:
        description: es的ID
        type: string
      image_id:
        description: 文章封面ID
        type: integer
      image_url:
        description: 文章封面url
        type: string
      keyword:
        description: 关键字，用于检测文章是否存在，值一般与title一致
        type: string
      link:
        description: 原文链接
        type: string
      look_count:
        description: 文章观看数
        type: integer
      source:
        description: 资源来源
        type: string
      tags:
        description: 文章标签，这里的tags分成两个也是和上面用户名同理
        items:
          type: string
        type: array
      title:
        description: 文章标题
        type: string
      update_at:
        description: 更新时间
        type: string
      user_avatar:
        description: 文章用户头像
        type: string
      user_id:
        description: 文章作者ID
        type: integer
      user_nick_name:
        description: 文章用户昵称
        type: string
    type: object
  models.ChatModel:
    properties:
      addr:
        type: string
      avatar:
        type: string
      content:
        type: string
      create_at:
        type: string
      id:
        type: integer
      ip:
        type: string
      is_group:
        description: 是否是群组消息
        type: boolean
      msg_type:
        type: integer
      nick_name:
        type: string
    type: object
  models.CommentModel:
    properties:
      article_id:
        description: 文章id
        type: string
      comment_count:
        description: 子评论数
        type: integer
      comment_model:
        allOf:
        - $ref: '#/definitions/models.CommentModel'
        description: 父级评论
      content:
        description: 评论内容
        type: string
      create_at:
        type: string
      digg_count:
        description: 点赞数
        type: integer
      id:
        type: integer
      parent_comment_id:
        description: 父评论id
        type: integer
      sub_comments:
        description: 子评论列表
        items:
          $ref: '#/definitions/models.CommentModel'
        type: array
      user:
        allOf:
        - $ref: '#/definitions/models.UserModel'
        description: 关联的用户
      user_id:
        description: 评论的用户
        type: integer
    type: object
  models.ESIDListRequest:
    properties:
      id_list:
        items:
          type: string
        type: array
    required:
    - id_list
    type: object
  models.ESIDRequest:
    properties:
      id:
        type: string
    type: object
  models.FullTextSearchModel:
    properties:
      body:
        description: 文章正文
        type: string
      id:
        description: es的ID
        type: string
      key:
        description: 文章关联的id
        type: string
      slug:
        description: 标题的跳转地址
        type: string
      title:
        description: 文章标题
        type: string
    type: object
  models.ImageModel:
    properties:
      create_at:
        type: string
      hash:
        description: 图片哈希值，用于判断重复图片
        type: string
      id:
        type: integer
      image_type:
        allOf:
        - $ref: '#/definitions/ctype.ImageType'
        description: 图片存储类型
      name:
        description: 图片名称
        type: string
      path:
        description: 图片路径
        type: string
    type: object
  models.MessageModel:
    properties:
      content:
        description: 消息内容
        type: string
      create_at:
        type: string
      id:
        type: integer
      is_read:
        description: 接收方是否收到消息
        type: boolean
      rev_user_avatar:
        description: 接收者头像
        type: string
      rev_user_id:
        description: 接收者ID
        type: integer
      rev_user_nick_name:
        description: 接收者名称
        type: string
      send_user_avatar:
        description: 发送者头像
        type: string
      send_user_id:
        description: 发送者ID
        type: integer
      send_user_nick_name:
        description: 发送者名称
        type: string
    type: object
  models.PageInfo:
    properties:
      key:
        description: 模糊匹配的关键字
        type: string
      limit:
        description: 每页限制显示量
        type: integer
      page:
        description: 页数
        type: integer
      sort:
        description: 排序
        type: string
    type: object
  models.RemoveRequest:
    properties:
      id_list:
        items:
          type: integer
        type: array
    type: object
  models.TagModel:
    properties:
      create_at:
        type: string
      id:
        type: integer
      title:
        type: string
    type: object
  models.UserModel:
    properties:
      address:
        type: string
      avatar:
        type: string
      create_at:
        type: string
      email:
        type: string
      id:
        type: integer
      ip:
        type: string
      nick_name:
        description: gorm.Model                     //gorm的Model自带逻辑删除，如果需要用就用gorm自带的
        type: string
      role:
        allOf:
        - $ref: '#/definitions/ctype.Role'
        description: 角色权限：1为管理员，2为用户，3为游客
      sign_status:
        allOf:
        - $ref: '#/definitions/ctype.SignStatus'
        description: 注册来源
      telephone:
        type: string
      token:
        type: string
      user_name:
        type: string
    type: object
  news_api.NewsResponse:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/redis_service.NewsData'
        type: array
      msg:
        type: string
    type: object
  news_api.params:
    properties:
      id:
        type: string
      size:
        type: integer
    type: object
  redis_service.NewsData:
    properties:
      hotValue:
        type: string
      index:
        type: integer
      link:
        type: string
      title:
        type: string
    type: object
  res.ListResponse-article_api_CollectResponse:
    properties:
      count:
        type: integer
      list:
        $ref: '#/definitions/article_api.CollectResponse'
    type: object
  res.ListResponse-article_api_TagsResponse:
    properties:
      count:
        type: integer
      list:
        $ref: '#/definitions/article_api.TagsResponse'
    type: object
  res.ListResponse-models_AdvertModel:
    properties:
      count:
        type: integer
      list:
        $ref: '#/definitions/models.AdvertModel'
    type: object
  res.ListResponse-models_FullTextSearchModel:
    properties:
      count:
        type: integer
      list:
        $ref: '#/definitions/models.FullTextSearchModel'
    type: object
  res.ListResponse-models_ImageModel:
    properties:
      count:
        type: integer
      list:
        $ref: '#/definitions/models.ImageModel'
    type: object
  res.ListResponse-models_TagModel:
    properties:
      count:
        type: integer
      list:
        $ref: '#/definitions/models.TagModel'
    type: object
  res.ListResponse-models_UserModel:
    properties:
      count:
        type: integer
      list:
        $ref: '#/definitions/models.UserModel'
    type: object
  res.ListResponse-news_api_NewsResponse:
    properties:
      count:
        type: integer
      list:
        $ref: '#/definitions/news_api.NewsResponse'
    type: object
  res.Response:
    properties:
      code:
        type: integer
      data: {}
      msg:
        type: string
    type: object
  tag_api.TagRequest:
    properties:
      title:
        type: string
    required:
    - title
    type: object
  user_api.BindEmailRequest:
    properties:
      code:
        type: string
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  user_api.EmailLoginRequest:
    properties:
      password:
        type: string
      user_name:
        type: string
    required:
    - password
    - user_name
    type: object
  user_api.UpdatePasswordRequest:
    properties:
      new_pwd:
        type: string
      old_pwd:
        type: string
    required:
    - new_pwd
    - old_pwd
    type: object
  user_api.UserCreateRequest:
    properties:
      nick_name:
        description: 昵称
        type: string
      password:
        description: 密码
        type: string
      role:
        allOf:
        - $ref: '#/definitions/ctype.Role'
        description: 权限  1 管理员  2 普通用户  3 游客
      user_name:
        description: 用户名
        type: string
    required:
    - nick_name
    - password
    - role
    - user_name
    type: object
  user_api.UserRoleRequest:
    properties:
      nick_name:
        description: 防止用户昵称非法，管理员有权限修改
        type: string
      role:
        allOf:
        - $ref: '#/definitions/ctype.Role'
        enum:
        - 1
        - 2
        - 3
        - 4
      user_id:
        type: integer
    required:
    - role
    - user_id
    type: object
host: 127.0.0.01:8080
info:
  contact: {}
  description: GoRoLingG API文档
  title: GoRoLingG API文档
  version: "1.0"
paths:
  /api/advertList:
    get:
      description: 广告列表，用于展示所有广告
      parameters:
      - description: 模糊匹配的关键字
        in: query
        name: key
        type: string
      - description: 每页限制显示量
        in: query
        name: limit
        type: integer
      - description: 页数
        in: query
        name: page
        type: integer
      - description: 排序
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  $ref: '#/definitions/res.ListResponse-models_AdvertModel'
              type: object
      summary: 广告列表
      tags:
      - 广告管理
  /api/advertRemove:
    delete:
      description: 广告删除，用于批量删除广告
      parameters:
      - description: 要删除的广告id列表
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.RemoveRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: 广告删除
      tags:
      - 广告管理
  /api/advertUpdate/{id}:
    put:
      description: 广告更新
      parameters:
      - description: 需要更新的广告ID
        in: path
        name: id
        required: true
        type: integer
      - description: 广告更新的一些参数
        in: body
        name: _
        required: true
        schema:
          $ref: '#/definitions/advert_api.AdvertRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: 广告更新
      tags:
      - 广告管理
  /api/advertUpload:
    post:
      description: 创建广告
      parameters:
      - description: 添加新广告的一些参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/advert_api.AdvertRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 创建广告
      tags:
      - 广告管理
  /api/articleCalendar:
    get:
      description: 查看近期文章发布的数量日历
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  $ref: '#/definitions/article_api.CalendarResponse'
              type: object
      summary: 文章日历
      tags:
      - 文章管理
  /api/articleCollect:
    post:
      description: 收藏文章
      parameters:
      - description: Authorization token
        in: header
        name: token
        required: true
        type: string
      - description: 收藏文章的一些参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.ESIDRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 收藏文章
      tags:
      - 文章管理
  /api/articleCollectList:
    get:
      description: 用户文章收藏列表
      parameters:
      - description: Authorization token
        in: header
        name: token
        required: true
        type: string
      - description: 模糊匹配的关键字
        in: query
        name: key
        type: string
      - description: 每页限制显示量
        in: query
        name: limit
        type: integer
      - description: 页数
        in: query
        name: page
        type: integer
      - description: 排序
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  $ref: '#/definitions/res.ListResponse-article_api_CollectResponse'
              type: object
      summary: 用户文章收藏列表
      tags:
      - 文章管理
  /api/articleCollectRemove:
    delete:
      description: 用户取消文章收藏
      parameters:
      - description: Authorization token
        in: header
        name: token
        required: true
        type: string
      - description: 当前用户取消文章收藏的一些参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.ESIDListRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 用户取消文章收藏
      tags:
      - 文章管理
  /api/articleCreate:
    post:
      description: 添加新文章
      parameters:
      - description: Authorization token
        in: header
        name: token
        required: true
        type: string
      - description: 添加新文章的一些参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/article_api.ArticleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 添加文章
      tags:
      - 文章管理
  /api/articleDetail/{id}:
    get:
      description: 查询文章详情的列表
      parameters:
      - description: 需要查询详情的文章ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.ArticleModel'
              type: object
      summary: 文章详情列表
      tags:
      - 文章管理
  /api/articleFullTextSearch:
    get:
      description: 全文搜索列表
      parameters:
      - description: 模糊匹配的关键字
        in: query
        name: key
        type: string
      - description: 每页限制显示量
        in: query
        name: limit
        type: integer
      - description: 页数
        in: query
        name: page
        type: integer
      - description: 排序
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  $ref: '#/definitions/res.ListResponse-models_FullTextSearchModel'
              type: object
      summary: 全文搜索列表
      tags:
      - 标签管理
  /api/articleList:
    get:
      description: 查询所有文章的列表
      parameters:
      - description: 模糊匹配的关键字
        in: query
        name: key
        type: string
      - description: 每页限制显示量
        in: query
        name: limit
        type: integer
      - description: 页数
        in: query
        name: page
        type: integer
      - description: 排序
        in: query
        name: sort
        type: string
      - in: query
        name: tag
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  $ref: '#/definitions/res.ListResponse-models_AdvertModel'
              type: object
      summary: 文章列表
      tags:
      - 文章管理
  /api/articleRemove:
    delete:
      description: 删除文章
      parameters:
      - description: Authorization token
        in: header
        name: token
        required: true
        type: string
      - description: 删除文章的一些参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/article_api.IDListRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 文章删除
      tags:
      - 文章管理
  /api/articleTagsList:
    get:
      description: 查询文章标签列表
      parameters:
      - description: 查询文章标签的一些参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.PageInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  $ref: '#/definitions/res.ListResponse-article_api_TagsResponse'
              type: object
      summary: 文章标签列表
      tags:
      - 文章管理
  /api/articleUpdate:
    put:
      description: 更新文章
      parameters:
      - description: Authorization token
        in: header
        name: token
        required: true
        type: string
      - description: 更新文章的一些参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/article_api.ArticleUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 文章更新
      tags:
      - 文章管理
  /api/chatRecord:
    get:
      description: 查询所有的群聊聊天记录
      parameters:
      - description: 模糊匹配的关键字
        in: query
        name: key
        type: string
      - description: 每页限制显示量
        in: query
        name: limit
        type: integer
      - description: 页数
        in: query
        name: page
        type: integer
      - description: 排序
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.ChatModel'
              type: object
      summary: 群聊聊天记录
      tags:
      - 聊天管理
  /api/commentCreate:
    post:
      description: 创建新的评论
      parameters:
      - description: Authorization token
        in: header
        name: token
        required: true
        type: string
      - description: 创建新评论的一些参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/comment_api.CommentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 创建评论
      tags:
      - 评论管理
  /api/commentList:
    get:
      description: 查询文章评论列表
      parameters:
      - description: 查询评论列表的一些参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/comment_api.CommentListRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.CommentModel'
              type: object
      summary: 文章评论列表
      tags:
      - 评论管理
  /api/commentRemove/{id}:
    delete:
      description: 删除现有的评论
      parameters:
      - description: 需要删除的评论ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 删除评论
      tags:
      - 评论管理
  /api/diggArticle/{id}:
    post:
      description: 点赞文章
      parameters:
      - description: 需要点赞的文章ID
        in: path
        name: id
        required: true
        type: string
      - description: 点赞文章的一些参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.ESIDRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 文章点赞
      tags:
      - 文章管理
  /api/diggComment/{id}:
    post:
      description: 点赞评论
      parameters:
      - description: 需要点赞的评论ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 点赞评论
      tags:
      - 评论管理
  /api/emailLogin:
    post:
      description: 用户名/邮箱登录
      parameters:
      - description: 用户邮箱登录的一些参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/user_api.EmailLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 用户名/邮箱登录
      tags:
      - 用户管理
  /api/imagesList:
    get:
      description: 图片列表，用于显示所有的图片
      parameters:
      - description: 模糊匹配的关键字
        in: query
        name: key
        type: string
      - description: 每页限制显示量
        in: query
        name: limit
        type: integer
      - description: 页数
        in: query
        name: page
        type: integer
      - description: 排序
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  $ref: '#/definitions/res.ListResponse-models_ImageModel'
              type: object
      summary: 图片列表
      tags:
      - 图片管理
  /api/imagesNameList:
    get:
      description: 图片列表，用于精简显示所有的图片数据
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/images_api.ImageResponse'
                  type: array
              type: object
      summary: 图片列表精简查询
      tags:
      - 图片管理
  /api/imagesRemove:
    delete:
      description: 图片删除，用于批量删除数据库内的图片数据
      parameters:
      - description: 要删除的图片id列表
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.RemoveRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: 图片删除
      tags:
      - 图片管理
  /api/imagesUpdate:
    put:
      description: 图片更新，用于更新图片名字
      parameters:
      - description: 要更新的图片id和更改后的name
        in: body
        name: _
        required: true
        schema:
          $ref: '#/definitions/images_api.ImageUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: 图片更新
      tags:
      - 图片管理
  /api/imagesUpload:
    post:
      consumes:
      - multipart/form-data
      description: 添加图片，提供图片上传功能
      parameters:
      - description: 上传的图片文件
        in: formData
        name: images
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: 操作成功
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  type: object
              type: object
      summary: 添加图片
      tags:
      - 图片管理
  /api/menuDetailList/{id}:
    get:
      description: 查看菜单项详情的列表
      parameters:
      - description: 需要查询的菜单项ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 菜单详情列表
      tags:
      - 菜单管理
  /api/menusList:
    get:
      description: 查看所有菜单项的菜单列表
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  $ref: '#/definitions/menu_api.MenuResponse'
              type: object
      summary: 菜单列表
      tags:
      - 菜单管理
  /api/menusNameList:
    get:
      description: 查看菜单项名字的列表
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  $ref: '#/definitions/menu_api.MenuNameResponse'
              type: object
      summary: 菜单项名列表
      tags:
      - 菜单管理
  /api/menusRemove:
    delete:
      description: 菜单内删除存在的菜单项
      parameters:
      - description: 删除菜单项的一些参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.RemoveRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 菜单项删除
      tags:
      - 菜单管理
  /api/menusUpdate/{id}:
    put:
      description: 菜单内更新存在的菜单项
      parameters:
      - description: 需要更新的菜单项ID
        in: path
        name: id
        required: true
        type: integer
      - description: 删除菜单项的一些参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/menu_api.MenuRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 菜单项更新
      tags:
      - 菜单管理
  /api/menusUpload:
    post:
      description: 菜单内创建新的菜单项
      parameters:
      - description: 新建菜单项的一些参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/menu_api.MenuRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 菜单项创建
      tags:
      - 菜单管理
  /api/messageAdminList:
    get:
      description: 查询所有消息的列表
      parameters:
      - description: Authorization token
        in: header
        name: token
        required: true
        type: string
      - description: 模糊匹配的关键字
        in: query
        name: key
        type: string
      - description: 每页限制显示量
        in: query
        name: limit
        type: integer
      - description: 页数
        in: query
        name: page
        type: integer
      - description: 排序
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 消息列表
      tags:
      - 消息管理
  /api/messageCreate:
    post:
      description: 创建新的消息
      parameters:
      - description: 创建新消息的一些参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/message_api.MessageRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 创建新消息
      tags:
      - 消息管理
  /api/messageRecord:
    get:
      description: 查询当前用户所有的消息记录
      parameters:
      - description: Authorization token
        in: header
        name: token
        required: true
        type: string
      - description: 查询与ID用户的消息记录
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/message_api.MessageRecordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.MessageModel'
              type: object
      summary: 消息记录列表
      tags:
      - 消息管理
  /api/messageUserList:
    get:
      description: 查询当前用户所有消息的列表
      parameters:
      - description: Authorization token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  $ref: '#/definitions/message_api.Message'
              type: object
      summary: 消息列表
      tags:
      - 消息管理
  /api/newsList:
    get:
      description: 查询新闻列表
      parameters:
      - description: itab新闻接口密钥
        in: header
        name: Signaturekey
        required: true
        type: string
      - description: itab新闻接口版本号
        in: header
        name: version
        required: true
        type: string
      - description: 查询itab新闻的荷载ID和显示新闻多少Size
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/news_api.params'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  $ref: '#/definitions/res.ListResponse-news_api_NewsResponse'
              type: object
      summary: 新闻列表
      tags:
      - 新闻管理
  /api/qqLogin:
    post:
      description: 用户QQ登录
      parameters:
      - description: 用户QQ登录的一些参数
        in: query
        name: data
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: 用户QQ登录
      tags:
      - 用户管理
  /api/tagList:
    get:
      description: 标签列表，用于展示所有标签
      parameters:
      - description: 模糊匹配的关键字
        in: query
        name: key
        type: string
      - description: 每页限制显示量
        in: query
        name: limit
        type: integer
      - description: 页数
        in: query
        name: page
        type: integer
      - description: 排序
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  $ref: '#/definitions/res.ListResponse-models_TagModel'
              type: object
      summary: 标签列表
      tags:
      - 标签管理
  /api/tagRemove:
    delete:
      description: 删除现有的标签
      parameters:
      - description: 删除现有标签的一些参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/tag_api.TagRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 删除标签
      tags:
      - 标签管理
  /api/tagUpdate/{id}:
    put:
      description: 更新现有的标签
      parameters:
      - description: 需要更新的标签ID
        in: path
        name: id
        required: true
        type: integer
      - description: 更新现有标签的一些参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/tag_api.TagRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 更新标签
      tags:
      - 标签管理
  /api/tagUpload:
    post:
      description: 创建新的标签
      parameters:
      - description: 创建新标签的一些参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/tag_api.TagRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 创建标签
      tags:
      - 标签管理
  /api/userBindEmail:
    post:
      description: 当前登录的用户进行邮箱绑定
      parameters:
      - description: Authorization token
        in: header
        name: token
        required: true
        type: string
      - description: 用户邮箱绑定的一些参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/user_api.BindEmailRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: subject
      summary: 用户邮箱绑定
      tags:
      - 用户管理
  /api/userCreate:
    post:
      description: 添加新用户
      parameters:
      - description: Authorization token
        in: header
        name: token
        required: true
        type: string
      - description: 添加新用户的一些参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/user_api.UserCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 添加用户
      tags:
      - 用户管理
  /api/userList:
    get:
      description: 用户列表，用于展示目前所有用户
      parameters:
      - description: Authorization token
        in: header
        name: token
        required: true
        type: string
      - description: 模糊匹配的关键字
        in: query
        name: key
        type: string
      - description: 每页限制显示量
        in: query
        name: limit
        type: integer
      - description: 页数
        in: query
        name: page
        type: integer
      - description: 排序
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  $ref: '#/definitions/res.ListResponse-models_UserModel'
              type: object
      summary: 用户列表
      tags:
      - 用户管理
  /api/userLogout:
    post:
      description: 用户注销账号
      parameters:
      - description: Authorization token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: subject
      summary: 用户注销账号
      tags:
      - 用户管理
  /api/userRemove:
    delete:
      description: 管理员删除用户
      parameters:
      - description: Authorization token
        in: header
        name: token
        required: true
        type: string
      - description: 用户删除的一些参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.RemoveRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 管理员删除用户
      tags:
      - 用户管理
  /api/userUpdateAdmin:
    put:
      description: 管理员修改用户权限
      parameters:
      - description: Authorization token
        in: header
        name: token
        required: true
        type: string
      - description: 添加用户修改的一些参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/user_api.UserRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 管理员修改用户权限
      tags:
      - 用户管理
  /api/userUpdatePassword:
    put:
      description: 用户密码修改
      parameters:
      - description: Authorization token
        in: header
        name: token
        required: true
        type: string
      - description: 添加用户修改的一些参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/user_api.UpdatePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 用户密码修改
      tags:
      - 用户管理
swagger: "2.0"
